{"ast":null,"code":"var _jsxFileName = \"/Users/OhWhen/Desktop/UW-GIT/Homework/React-Directory/employee-directory/src/components/Employee/index.js\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nclass Employee extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const employees = nextProps.employees;\n    const startDate = new Date(nextProps.startDate);\n    const endDate = new Date(nextProps.endDate);\n    const searchedName = nextProps.name;\n\n    if (oldStartDate.getTime() !== startDate.getTime() && oldEndDate.getTime() !== endDate.getTime()) {\n      const oldStartDate = new Date(this.props.startDate);\n      const oldEndDate = new Date(this.props.endDate);\n      this.setState({\n        employees: employees.filter(function (employee) {\n          const employeeDOB = new Date(employee.dob.date); // checking if employeeDOB is in between startDate and endDate\n\n          if (employeeDOB.getTime() > startDate.getTime() && employeeDOB.getTime() < endDate.getTime()) {\n            return true;\n          }\n\n          return false;\n        })\n      });\n      const oldSearchedName = this.props.name;\n\n      if (oldSearchedName !== searchedName) {\n        this.setState({\n          employees: employees.filter(function (employee) {\n            const fullName = employee.name.first + ' ' + employee.name.last;\n\n            if (fullName.indexOf(searchedName) !== -1) {\n              return true;\n            }\n\n            return false;\n          })\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"DOB\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.state.employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n      key: employee.id.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"employee pic\",\n      src: employee.picture.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, employee.name.first, \" \", employee.name.last), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, employee.phone), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, employee.email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, moment(employee.dob.date.slice(0, 10)).format(\"MM-DD-YYYY\"))))));\n  }\n\n}\n\nexport default Employee;","map":{"version":3,"sources":["/Users/OhWhen/Desktop/UW-GIT/Homework/React-Directory/employee-directory/src/components/Employee/index.js"],"names":["React","moment","Employee","Component","state","employees","componentWillReceiveProps","nextProps","startDate","Date","endDate","searchedName","name","oldStartDate","getTime","oldEndDate","props","setState","filter","employee","employeeDOB","dob","date","oldSearchedName","fullName","first","last","indexOf","render","map","id","value","picture","thumbnail","phone","email","slice","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nclass Employee extends React.Component {\n  state = {\n    employees: []\n  };\n  componentWillReceiveProps(nextProps) {\n    const employees = nextProps.employees;\n    const startDate = new Date(nextProps.startDate);\n    const endDate = new Date(nextProps.endDate);\n    const searchedName = nextProps.name;\n\n    if (oldStartDate.getTime() !== startDate.getTime() && oldEndDate.getTime() !== endDate.getTime()) {\n      const oldStartDate = new Date(this.props.startDate);\n      const oldEndDate = new Date(this.props.endDate);\n\n      this.setState({\n        employees: employees.filter(function(employee) {\n          const employeeDOB = new Date(employee.dob.date);\n          // checking if employeeDOB is in between startDate and endDate\n          if (\n            employeeDOB.getTime() > startDate.getTime() &&\n            employeeDOB.getTime() < endDate.getTime()\n          ) {\n            return true;\n          }\n          return false;\n        })\n      });\n\n      const oldSearchedName = this.props.name;\n      if(oldSearchedName !== searchedName){\n        this.setState({\n          employees: employees.filter(function(employee) {\n            const fullName = employee.name.first + ' ' + employee.name.last;\n\n            if(fullName.indexOf(searchedName) !== -1){\n              return true;\n            }\n            return false;\n          })\n        })\n      }\n\n    }\n  }\n  render() {\n    return (\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">DOB</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.employees.map(employee => (\n            <tr key={employee.id.value}>\n              <td>\n                <img alt=\"employee pic\" src={employee.picture.thumbnail}></img>\n              </td>\n              <td>\n                {employee.name.first} {employee.name.last}\n              </td>\n              <td>{employee.phone}</td>\n              <td>{employee.email}</td>\n              <td>\n                {moment(employee.dob.date.slice(0, 10)).format(\"MM-DD-YYYY\")}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\nexport default Employee;\n"]},"metadata":{},"sourceType":"module"}