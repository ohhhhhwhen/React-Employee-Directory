{"ast":null,"code":"var _jsxFileName = \"/Users/OhWhen/Desktop/UW-GIT/Homework/React-Directory/employee-directory/src/components/InputForms.js\";\nimport React from \"react\";\nimport API from \"../utils/API\";\nimport \"../styles/styles.css\";\nimport Employee from \"./Employee\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass InputForms extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      search: \"\",\n      sortType: \"\",\n      startDate: new Date(\"01/02/1950\"),\n      endDate: new Date(\"04/12/2020\")\n    };\n\n    this.handleSortState = () => {\n      const selectElement = document.querySelector(\"#sortSelection\");\n      const output = selectElement.value;\n      console.log(output);\n\n      if (output === \"name\") {\n        const sortedEmployees = this.state.employees;\n        sortedEmployees.sort((a, b) => a.name.last.localeCompare(b.name.last));\n        this.setState({\n          employees: sortedEmployees\n        });\n      }\n\n      if (output === \"dob\") {\n        this.setState({\n          sortType: \"dob\"\n        });\n        const sortedEmployees = this.state.employees;\n        sortedEmployees.sort((a, b) => a.dob.date.localeCompare(b.dob.date));\n        this.setState({\n          employees: sortedEmployees\n        });\n      }\n\n      if (output === \"nosort\") {\n        this.setState({\n          sortType: \"nosort\"\n        });\n      }\n    };\n\n    this.handleStartDate = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.handleEndDate = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.handleNameSearch = nameSearch => {\n      this.setState({\n        name: nameSearch\n      });\n    };\n\n    this.getEmployees = () => {\n      API.getEmployees().then(res => {\n        this.setState({\n          employees: res.data.results\n        });\n        console.log(this.state.employees);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"DOB\"), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.handleStartDate,\n      className: \"yearInput\",\n      name: \"firstYear\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onChange: this.handleEndDate,\n      className: \"yearInput\",\n      name: \"secondYear\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      selected: this.state.name,\n      onChange: this.handleNameSearch,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(Employee, {\n      sort: this.state.sortType,\n      employees: this.state.employees,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default InputForms;","map":{"version":3,"sources":["/Users/OhWhen/Desktop/UW-GIT/Homework/React-Directory/employee-directory/src/components/InputForms.js"],"names":["React","API","Employee","DatePicker","InputForms","Component","state","employees","search","sortType","startDate","Date","endDate","handleSortState","selectElement","document","querySelector","output","value","console","log","sortedEmployees","sort","a","b","name","last","localeCompare","setState","dob","date","handleStartDate","handleEndDate","handleNameSearch","nameSearch","getEmployees","then","res","data","results","catch","err","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../utils/API\";\nimport \"../styles/styles.css\";\nimport Employee from \"./Employee\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass InputForms extends React.Component {\n  state = {\n    employees: [],\n    search: \"\",\n    sortType: \"\",\n    startDate: new Date(\"01/02/1950\"),\n    endDate: new Date(\"04/12/2020\")\n  };\n\n  handleSortState = () => {\n    const selectElement = document.querySelector(\"#sortSelection\");\n    const output = selectElement.value;\n    console.log(output);\n    if (output === \"name\") {\n      const sortedEmployees = this.state.employees;\n      sortedEmployees.sort((a, b) => a.name.last.localeCompare(b.name.last));\n      this.setState({ employees: sortedEmployees });\n    }\n    if (output === \"dob\") {\n      this.setState({ sortType: \"dob\" });\n      const sortedEmployees = this.state.employees;\n      sortedEmployees.sort((a, b) => a.dob.date.localeCompare(b.dob.date));\n      this.setState({ employees: sortedEmployees });\n    }\n    if (output === \"nosort\") {\n      this.setState({ sortType: \"nosort\" });\n    }\n  };\n\n  handleStartDate = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n\n  handleEndDate = date => {\n    this.setState({\n      endDate: date\n    });\n  };\n\n  handleNameSearch = nameSearch => {\n    this.setState({\n      name: nameSearch\n    });\n  };\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = () => {\n    API.getEmployees()\n      .then(res => {\n        this.setState({\n          employees: res.data.results\n        });\n        console.log(this.state.employees);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"form-row\">\n          <div className=\"col\">\n            <form className=\"form\">\n              <div className=\"input-group-prepend\">\n                <div className=\"input-group-text\">DOB</div>\n                <DatePicker\n                  selected={this.state.startDate}\n                  onChange={this.handleStartDate}\n                  className=\"yearInput\"\n                  name=\"firstYear\"\n                  type=\"text\"\n                />\n                <DatePicker\n                  selected={this.state.endDate}\n                  onChange={this.handleEndDate}\n                  className=\"yearInput\"\n                  name=\"secondYear\"\n                  type=\"text\"\n                />\n                <input\n                  selected={this.state.name}\n                  onChange={this.handleNameSearch}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Name Search\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <Employee sort={this.state.sortType} employees={this.state.employees} />\n      </div>\n    );\n  }\n}\n\nexport default InputForms;\n"]},"metadata":{},"sourceType":"module"}